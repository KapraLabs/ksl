// lib.rs
mod ksl_ast;
mod ksl_parser;
mod ksl_checker;
mod ksl_compiler;
mod ksl_llvm;
mod ksl_errors;
pub mod ksl_scaffold;
pub mod scaffold_lint;
pub mod gas_profile;
pub mod ksl_smart_account;
pub mod ksl_ir;
pub mod ksl_abi;
pub mod ksl_lsp;
pub mod ksl_types;
pub mod ksl_stdlib_crypto;
pub mod ksl_syscalls;
pub mod ksl_validator_contract;
mod ksl_package;
mod ksl_version;
mod ksl_export;
mod ksl_stdlib;
pub mod ksl_macros;
pub mod ksl_generics;
pub mod ksl_analyzer;
pub mod ksl_bytecode;
pub mod ksl_wasm;
pub mod ksl_irgen;
pub mod ksl_async;

// Added missing module declarations - assuming these files exist in src/
pub mod ksl_kapra_crypto;
pub mod kapra_vm; // Or ksl_vm, needs confirmation of filename
pub mod ksl_linter;
pub mod ksl_docgen;
pub mod ksl_kapra_zkp;
pub mod ksl_value;
pub mod ksl_module;
pub mod ksl_validator_keys;
pub mod ksl_contract;
pub mod ksl_ast_transform;

// Instead of glob imports, use explicit imports for frequently used types
pub use ksl_ast::{Ast, AstNode, Expr};
pub use ksl_parser::{parse, ParseError, Parser, Token};
pub use ksl_checker::{check, TypeChecker, TypeCheckError};
pub use ksl_compiler::{compile, CompileError, CompileTarget, Compiler};
pub use ksl_llvm::{LlvmBackend, CodegenOptions};
pub use ksl_errors::{KslError, ErrorType, SourcePosition};
pub use ksl_lsp::{LspServer, LspRequest, LspResponse};
pub use ksl_macros::{MacroExpander, MacroRule};
pub use ksl_generics::{GenericParam, GenericResolver, GenericInstance};
pub use ksl_analyzer::{Analyzer, GasStats, AnalysisResult};
pub use ksl_bytecode::{KapraBytecode, KapraInstruction, KapraOpCode};
pub use ksl_wasm::{WasmBackend, WasmOptions, WasmError};
pub use ksl_irgen::{IrGenerator, IrModule};
pub use ksl_types::{Type, TypeSystem, TypeInfo};
pub use ksl_stdlib_crypto::{CryptoStdLib, hash_keccak, hash_sha256};
pub use ksl_syscalls::{syscall_register, syscall_execute};
pub use ksl_async::{AsyncRuntime, AsyncResult, AsyncContext};

// Added specific exports for new modules
pub use ksl_kapra_crypto::{CryptoContext, KeyPair, Signature};
pub use kapra_vm::{KapraVM, RuntimeError, VmExecutionContext};
pub use ksl_linter::{Linter, LintRule, LintResult};
pub use ksl_docgen::{DocGenerator, DocNode};
pub use ksl_kapra_zkp::{ZkProof, Verifier};
pub use ksl_value::{Value, ValueType};
pub use ksl_module::{Module, ModuleLoader};
pub use ksl_validator_keys::{ValidatorKeyStore, KeyType};
pub use ksl_contract::{Contract, ContractAbi};
pub use ksl_ast_transform::{transform, TransformRule};

// Added pub mod for missing files
pub mod ksl_benchmark;
pub mod ksl_config;
pub mod ksl_contract_verifier;
pub mod ksl_deploy;
pub mod ksl_hot_reload;
pub mod ksl_stdlib_math;
pub mod ksl_stdlib_net;
pub mod ksl_repl_server;
pub mod ksl_refactor;
pub mod ksl_repl;
pub mod ksl_simulator;
pub mod ksl_verifier;
pub mod ksl_plugins;
pub mod ksl_jit;
pub mod ksl_typegen;
pub mod ksl_updater;
pub mod ksl_web3;
pub mod ksl_vscode;
pub mod ksl_stdlib_io;
pub mod ksl_kapra_consensus;
pub mod ksl_kapra_shard;
pub mod ksl_kapra_validator;
pub mod ksl_metrics;
pub mod ksl_package_version;
pub mod ksl_bundler;
pub mod ksl_cli;
pub mod ksl_coverage;
pub mod ksl_debug;
pub mod ksl_dev_tools;
pub mod ksl_doc_lsp;
pub mod ksl_fuzzer;
pub mod ksl_game;
pub mod ksl_interpreter;
pub mod ksl_genesis;
pub mod ksl_doc;
pub mod ksl_data_blob;
pub mod ksl_test;
pub mod ksl_scaffold_gui;
pub mod ksl_aot;
pub mod ksl_sandbox;
pub mod ksl_bench;
pub mod ksl_package_publish;
pub mod ksl_ci;
pub mod ksl_cli_spec;
pub mod ksl_kapra_scheduler;
pub mod ksl_optimizer;
pub mod ksl_iot;
pub mod ksl_embedded;
pub mod ksl_community;
pub mod ksl_dep_audit;
pub mod ksl_runtime_monitor;
pub mod ksl_migrate;
pub mod ksl_template;
pub mod ksl_project;
pub mod ksl_transpiler;
pub mod ksl_testgen;
pub mod ksl_profile;
pub mod ksl_security;

// Use explicit imports instead of glob imports
pub use ksl_benchmark::{benchmark, BenchmarkResult, BenchmarkConfig};
pub use ksl_config::{Config, ConfigOption, load_config};
pub use ksl_contract_verifier::{verify_contract, VerificationResult};
pub use ksl_deploy::{deploy, DeployOptions, DeploymentResult};
pub use ksl_hot_reload::{HotReloader, ReloadEvent, setup_hot_reload};
pub use ksl_stdlib_math::{MathStdLib, FloatOps, VectorOps};
pub use ksl_stdlib_net::{NetStdLib, HttpClient, WebSocketClient};
pub use ksl_repl_server::{ReplServer, ServerCommand};
pub use ksl_refactor::{refactor, RefactorRule, RefactorOptions};
pub use ksl_repl::{Repl, ReplCommand, run_repl};
pub use ksl_simulator::{Simulator, SimulationConfig, SimulationResult};
pub use ksl_verifier::{verify_code, VerifierOptions};
pub use ksl_plugins::{PluginManager, Plugin, register_plugin};
pub use ksl_jit::{JitCompiler, JitOptions, compile_jit};
pub use ksl_typegen::{generate_types, TypegenOptions};
pub use ksl_updater::{check_updates, UpdateInfo, perform_update};
pub use ksl_web3::{Web3Client, Web3Request, Web3Response};
pub use ksl_vscode::{VsCodeExtension, ExtensionCommand};
pub use ksl_stdlib_io::{IOStdLib, FileSystem, Console};
pub use ksl_kapra_consensus::{ConsensusEngine, ConsensusConfig, ConsensusResult};
pub use ksl_kapra_shard::{ShardManager, ShardConfig, ShardId};
pub use ksl_kapra_validator::{Validator, ValidatorConfig, ValidatorState};
pub use ksl_metrics::{MetricsCollector, MetricType, Metric};
pub use ksl_package_version::{Version, VersionReq, check_version_compatibility};
pub use ksl_bundler::{bundle, BundleOptions, BundleResult};
pub use ksl_cli::{CliApp, CliCommand, run_cli};
pub use ksl_coverage::{CoverageReport, CoverageItem, generate_coverage};
pub use ksl_debug::{Debugger, BreakPoint, DebugInfo};
pub use ksl_dev_tools::{DevTools, ToolCommand, run_tool};
pub use ksl_doc_lsp::{DocLspServer, DocSymbol, DocHover};
pub use ksl_fuzzer::{Fuzzer, FuzzConfig, fuzz_test};
pub use ksl_game::{GameEngine, GameObject, Renderer};
pub use ksl_interpreter::{Interpreter, InterpreterOptions, interpret};
pub use ksl_genesis::{GenesisBlock, GenesisConfig, generate_genesis};
pub use ksl_doc::{DocGenerator as DocumentationGenerator, generate_docs};
pub use ksl_data_blob::{DataBlob, BlobStore, BlobId};
pub use ksl_test::{TestRunner as TestExecutor, TestCase, run_tests};
pub use ksl_scaffold_gui::{ScaffoldGui, GuiCommand};
pub use ksl_aot::{AotCompiler, AotOptions, compile_aot};
pub use ksl_sandbox::{Sandbox, SandboxPolicy, run_sandbox};
pub use ksl_bench::{run_benchmark, BenchmarkSuite, BenchResult};
pub use ksl_package_publish::{publish, PublishOptions, PublishResult};
pub use ksl_ci::{CiRunner, CiConfig, run_ci_checks};
pub use ksl_cli_spec::{CliSpec, CommandSpec, OptionSpec};
pub use ksl_kapra_scheduler::{Scheduler, SchedulePolicy, TaskSchedule};
pub use ksl_optimizer::{optimize, OptimizationLevel, OptimizationPass};
pub use ksl_iot::{IoTRuntime, DeviceConfig, SensorData};
pub use ksl_embedded::{EmbeddedCompiler, TargetDevice, embed_code};
pub use ksl_community::{CommunityClient, ForumPost, submit_feedback};
pub use ksl_dep_audit::{audit_dependencies, AuditResult, SecurityVulnerability};
pub use ksl_runtime_monitor::{Monitor, MonitorConfig, MonitoredResource};
pub use ksl_migrate::{migrate_code, MigrationRule, MigrationResult};
pub use ksl_template::{TemplateRegistry, TemplateConfig, generate_template};
pub use ksl_project::{Project, ProjectConfig, initialize_project};
pub use ksl_transpiler::{Transpiler, TranspilerConfig, TranspileTarget};
pub use ksl_testgen::{TestGen, TestGenConfig, generate_tests};
pub use ksl_profile::{Profiler, ProfileData, ProfileReport};
pub use ksl_security::{SecurityAnalyzer, SecurityConfig, SecurityIssue};
pub use ksl_package::{Package, PackageManager, install_package};
pub use scaffold_lint::{LintEngine, LintMessage, run_linter};
pub use gas_profile::{GasProfiler, GasUsageReport, profile_gas};
pub use ksl_stdlib::{StdLib, StdLibFunction, register_stdlib}; 